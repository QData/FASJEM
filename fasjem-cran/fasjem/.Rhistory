norm_vec <- function(x) sqrt(sum(x^2))
f1 <- function(x, ga){
result = pmax(x - ga, 0) + pmin(x + ga, 0)
return(result)
}
g1 <- function(x, a, lambda){
result = pmax(pmin(x - a, -lambda), lambda) + a
return(result)
}
f2 <- function(x, ga){
result = x * array(pmax(1 - ga / apply(x, c(1,2), norm_vec), 0), dim(x))
return(result)
}
g2 <- function(x, a, lambda){
result = array(pmax(lambda / apply(x - a, c(1,2), norm_vec), 1), dim(x)) * (x - a) + a
return(result)
}
1 + 2
hello <- function() {
print("Hello, world!")
}
hello()
fasjem <- function(a, lambda, epsilon, gamma, rho, iterMax){
x1 = a
x2 = a
x3 = a
x4 = a
for (i in 1:iterMax){
p1 = f1(x1, (4*lambda*gamma))
p2 = g1(x2, a, (4*lambda*gamma*epsilon))
p3 = f2(x3, lambda)
p4 = g2(x4, a, (epsilon*lambda))
p  = (p1 + p2 + p3 + p4) / 4
x1 = x1 + (p * 2 - p1 - x1) * rho
x2 = x2 + (p * 2 - p2 - x2) * rho
x3 = x3 + (p * 2 - p3 - x3) * rho
x4 = x4 + (p * 2 - p4 - x4) * rho
x  = x  + (p - x) * rho
}
return(x)
}
