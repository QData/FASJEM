{
    "collab_server" : "",
    "contents" : "# Hello, world!\n#\n# This is an example function named 'hello'\n# which prints 'Hello, world!'.\n#\n# You can learn more about package authoring with RStudio at:\n#\n#   http://r-pkgs.had.co.nz/\n#\n# Some useful keyboard shortcuts for package authoring:\n#\n#   Build and Reload Package:  'Ctrl + Shift + B'\n#   Check Package:             'Ctrl + Shift + E'\n#   Test Package:              'Ctrl + Shift + T'\n\nnorm_vec <- function(x) sqrt(sum(x^2))\n\nf1 <- function(x, ga){\n  result = pmax(x - ga, 0) + pmin(x + ga, 0)\n  return(result)\n}\n\ng1 <- function(x, a, lambda){\n  result = pmax(pmin(x - a, -lambda), lambda) + a\n  return(result)\n}\n\nf2 <- function(x, ga){\n  result = x * array(pmax(1 - ga / apply(x, c(1,2), norm_vec), 0), dim(x))\n  return(result)\n}\n\ng2 <- function(x, a, lambda){\n  result = array(pmax(lambda / apply(x - a, c(1,2), norm_vec), 1), dim(x)) * (x - a) + a\n  return(result)\n}\n\nfasjem_g <- function(a, lambda, epsilon, gamma, rho, iterMax){\n  x1 = a\n  x2 = a\n  x3 = a\n  x4 = a\n  for (i in 1:iterMax){\n    p1 = f1(x1, (4*lambda*gamma))\n    p2 = g1(x2, a, (4*lambda*gamma*epsilon))\n    p3 = f2(x3, lambda)\n    p4 = g2(x4, a, (epsilon*lambda))\n    p  = (p1 + p2 + p3 + p4) / 4\n    x1 = x1 + (p * 2 - p1 - x1) * rho\n    x2 = x2 + (p * 2 - p2 - x2) * rho\n    x3 = x3 + (p * 2 - p3 - x3) * rho\n    x4 = x4 + (p * 2 - p4 - x4) * rho\n    x  = x  + (p - x) * rho\n  }\n  return(x)\n}\n\nfasjem <- function()\n\nhello <- function() {\n  print(\"Hello, world!\")\n}\n",
    "created" : 1490712838171.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3241226599",
    "id" : "1D73A7CD",
    "lastKnownWriteTime" : 1490730974,
    "last_content_update" : 1490730974321,
    "path" : "~/Dropbox/SVN/nonparaGM/codes/fasjem-cran/fasjem/R/hello.R",
    "project_path" : "R/hello.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}