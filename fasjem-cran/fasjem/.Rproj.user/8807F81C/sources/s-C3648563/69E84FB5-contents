
library(fasjem)


readline(prompt="Press [enter] to continue to the first demo: cancerdemo")



### load cancer data (cancer)
data(cancer)


### create a list of cancer data (cancerlist)
cancerlist = list(as.matrix(cancer[[1]][which(cancer[[2]] == "not"),]),
                  as.matrix(cancer[[1]][which(cancer[[2]] == "pcr"),]))


cancerresult = fasjem(X = cancerlist, method = "fasjem-g", 2, 0.1, 0.1, 0.05, 20)

### obtain names for node labelling
cancername = colnames(cancer[[1]])

### obtain graph for creating layout
cancergraph = return.fasjem(cancerresult, option = "igraph")

### create a fixed layout on cancergraph for plotting =
cancerlayout = layout_nicely(cancergraph,dim=2)


## reset plotting window and clear graphs
graphics.off()


### multiple plotting

par(mfrow=c(2,2))

{
  plot.fasjem(cancerresult, option = "2D", graphlabel = cancername, type="graph", graphlayout = cancerlayout)

  plot.fasjem(cancerresult, option = "2D", graphlabel = cancername, type="share", graphlayout = cancerlayout)

  plot.fasjem(cancerresult, option = "2D", graphlabel = cancername, type="sub", subID=1, graphlayout = cancerlayout)

  plot.fasjem(cancerresult, option = "2D", graphlabel = cancername, type="sub", subID=2, graphlayout = cancerlayout)
}



readline(prompt="Press [enter] to continue to the first demo: cancerdemo")


### load the example data
data(exampleData)


### run fasjem algorithm to estimate two sparse precision matrices from example data

exampleresult = fasjem(X = exampleData, method = "fasjem-g", 0.5, 0.1, 0.1, 0.05, 10)
examplegraph = return.fasjem(exampleresult, option = "igraph")
examplelayout = layout_nicely(examplegraph,dim=2)

par(mfrow=c(2,2))

{
  plot.fasjem(exampleresult, option = "2D", graphlabel = NULL, type="graph", graphlayout = examplelayout)

  plot.fasjem(exampleresult, option = "2D", graphlabel = NULL, type="share", graphlayout = examplelayout)

  plot.fasjem(exampleresult, option = "2D", graphlabel = NULL, type="sub", subID=1, graphlayout = examplelayout)

  plot.fasjem(exampleresult, option = "2D", graphlabel = NULL, type="sub", subID=2, graphlayout = examplelayout)
}


par(mfrow=c(2,3))
data(exampleDataGraph)

{
  plot.fasjem(exampleresult, option = "2D", graphlabel = NULL, type="share", graphlayout = examplelayout)

  plot.fasjem(exampleresult, option = "2D", graphlabel = NULL, type="sub", subID=1, graphlayout = examplelayout)

  plot.fasjem(exampleresult, option = "2D", graphlabel = NULL, type="sub", subID=2, graphlayout = examplelayout)

  plot.igraph(exampleDataGraph[[1]],layout = examplelayout, vertex.label.font=2,
              vertex.shape="none",
              vertex.label.color="gray40",
              vertex.label.cex=.7, vertex.frame.color="white", vertex.size = 10 ,main = "shared_groundtruth")

  plot.igraph(exampleDataGraph[[2]],layout = examplelayout,vertex.label.font=2,
              vertex.shape="none",
              vertex.label.color="gray40",
              vertex.label.cex=.7, vertex.frame.color="white", vertex.size = 10 , main = "individual1_groundtruth")

  plot.igraph(exampleDataGraph[[3]],layout = examplelayout,vertex.label.font=2,
              vertex.shape="none",
              vertex.label.color="gray40",
              vertex.label.cex=.7, vertex.frame.color="white", vertex.size = 10 , main = "individual2_groundtruth")
}




